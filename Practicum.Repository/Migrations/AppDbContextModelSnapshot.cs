// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practicum.Repository.Context;

#nullable disable

namespace Practicum.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Practicum.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 22, 1, 43, 720, DateTimeKind.Local).AddTicks(6011),
                            Price = 50m,
                            ProductName = "Mouse",
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 22, 1, 43, 720, DateTimeKind.Local).AddTicks(6027),
                            Price = 10000m,
                            ProductName = "PC",
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 7, 22, 1, 43, 720, DateTimeKind.Local).AddTicks(6029),
                            Price = 100m,
                            ProductName = "Keyboard",
                            Stock = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
